name: Deploy to AWS-ECR

on:
  push:
    branches: [Dev]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
       skip-logout: true

    - name: Build, tag, and PuSh image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: node-project
        IMAGE_TAG: latest
      run: |
        pwd
        ls
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        ls
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    - name: Pull the latest image
      run: |
          docker pull 767398081771.dkr.ecr.us-east-1.amazonaws.com/node-project:latest
    - name: Configure Cluster
      run:  |
            aws eks update-kubeconfig --regio us-east-1 --name NodeProject
    - name: Update ECS Task Definition
      run: |
        aws ecs register-task-definition --cli-input-json file://ecs-task-definition.json

    - name: Update ECS Service
      run: |
        aws ecs update-service --cluster NodeProject --service arn:aws:ecs:us-east-1:767398081771:task/NodeProject/4552a9cb94a44ea7bbaaaf7f70afab2e --task-definition arn:aws:ecs:us-east-1:767398081771:task-definition/NodeApplication:1
